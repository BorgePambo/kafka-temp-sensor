version: '3'

networks:
  kafka-net:
    driver: bridge

services:
  zookeeper:
    container_name: zookeeper_ctn
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    container_name: kafka_ctn
    image: confluentinc/cp-kafka:latest
    restart: on-failure
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_NUM_PARTITIONS: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
    networks:
      - kafka-net
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
      - zookeeper
    networks:
      - kafka-net

  producer:
    container_name: producer
    build:
      context: .
      dockerfile: Dockerfile.producer
    depends_on:
      - kafka
    networks:
      - kafka-net

  consumer:
    container_name: consumer
    build:
      context: .
      dockerfile: Dockerfile.consumer
    depends_on:
      - kafka
    networks:
      - kafka-net